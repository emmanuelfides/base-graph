type PairCreated @entity(immutable: true) {
  id: String!
  tokenA: String! # address
  tokenB: String! # address
  pair: String! # address
  param3: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type Reserve @entity {
  id: String! # Unique identifier for this reserve event (e.g., transaction hash + log index)
  reserve0: BigInt! # Reserve amount of token0 (in smallest unit, e.g., wei)
  reserve1: BigInt! # Reserve amount of token1 (in smallest unit, e.g., wei)
  priceInETH: BigDecimal! # price in eth
  blockNumber: BigInt! # Block number when the reserve was recorded
  blockTimestamp: BigInt! # Timestamp of the block when the reserve was recorded
  transactionHash: String! # Transaction hash of the event
  pair: String! # Address of the pair contract
}

type Holder @entity {
  id: ID!
  address: Bytes!
  balance: BigInt!
  percentage: BigDecimal!
  token: Token!
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  supply: BigInt!
  holders: [Holder!]! @derivedFrom(field: "token")
}